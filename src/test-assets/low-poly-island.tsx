/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    floating_island_11: THREE.Mesh;
  };
  materials: Record<string, unknown>;
};

export function LowPolyIslands(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/island_fbx_gltf.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.floating_island_11.geometry} scale={1} position={[0, 0, 0]}>
        <meshStandardMaterial map={(nodes.floating_island_11.material as THREE.MeshStandardMaterial).map} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/island_fbx_gltf.glb');
